/*
TRUNCATE TABLE CUISINE CASCADE;
TRUNCATE TABLE PARKING CASCADE;
TRUNCATE TABLE RATING CASCADE;
TRUNCATE TABLE GEOPLACES CASCADE;
TRUNCATE TABLE USER_PROFILE CASCADE;
*/

SELECT * FROM USER_PROFILE;
SELECT * FROM GEOPLACES;
SELECT * FROM RATING;
SELECT * FROM CUISINE;
SELECT * FROM PARKING;

-- Which City has highest no of restaurants with higher rating
SELECT COUNT(R.RATING),G.CITY
FROM USER_PROFILE UP,
RATING R,
GEOPLACES G
WHERE UP.USERID = R.USERID
AND R.PLACEID = G.PLACEID
AND G.CITY != 'Not Recorded'
GROUP BY G.CITY
HAVING MAX(R.RATING) = 2 --- 2 being the highest rating
ORDER BY COUNT(R.RATING) DESC;


-- Does Parking lot affect the rating
SELECT P.PARKING_LOT,R.RATING, COUNT(R.RATING) AS "TOTAL RATING"
FROM USER_PROFILE UP,
RATING R,
GEOPLACES G,
PARKING P
WHERE UP.USERID = R.USERID
AND R.PLACEID = G.PLACEID
AND G.PLACEID = P.PLACEID
GROUP BY P.PARKING_LOT,R.RATING
ORDER BY COUNT(R.RATING) DESC
LIMIT 5;


SELECT DISTINCT RATING FROM RATING

--- Does serving alcohol affect user rating?
SELECT G.ALCOHOL,R.RATING, COUNT(R.RATING) AS "TOTAL RATING"
FROM RATING R,
GEOPLACES G
WHERE R.PLACEID = G.PLACEID
GROUP BY G.ALCOHOL,R.RATING
HAVING MAX(R.RATING) = 2 --- 2 being the highest rating
ORDER BY COUNT(R.RATING) DESC;


--- Religion wise user preference of restaurants
SELECT UP.RELIGION,G.NAME
FROM USER_PROFILE UP,
RATING R,
GEOPLACES G
WHERE UP.USERID = R.USERID
AND R.PLACEID = G.PLACEID
AND 
	(
		
	)

SELECT DISTINCT RELIGION FROM USER_PROFILE
"Mormon"
"none"
"Christian"
"Jewish"
"Catholic"

SELECT SRC.RELIGION,SRC.NAME,SRC.CNT,SRC.MAX_CNT
FROM 
(
	SELECT UP.RELIGION,G.NAME,COUNT(G.NAME) AS CNT,
	MAX(COUNT(G.NAME)) OVER (PARTITION BY UP.RELIGION) AS MAX_CNT
	FROM USER_PROFILE UP,
	RATING R,
	GEOPLACES G
	WHERE UP.USERID = R.USERID
	AND R.PLACEID = G.PLACEID
	AND UP.RELIGION != 'none'
	GROUP BY UP.RELIGION,G.NAME
	ORDER BY COUNT(G.NAME) DESC
) SRC
WHERE SRC.CNT = SRC.MAX_CNT

select count(*) geoplaces

SELECT geoplaces.placeid, geoplaces.name,geoplaces.ambience,rating.placeid,SUM(rating.rating) AS "Overall Rating SUM"
FROM rating
INNER JOIN geoplaces ON
geoplaces.placeid = rating.placeid
WHERE geoplaces.ambience = 'familiar'
GROUP BY geoplaces.placeid, rating.placeid
ORDER BY SUM(rating.rating) DESC
LIMIT 5;
